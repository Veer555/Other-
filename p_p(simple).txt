using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.SceneManagement;
using UnityEngine.UI;

public class P_P : MonoBehaviour
{
    int gridnum=3, matchnum=3;
    public GameObject btn, btnholder;
    List<GameObject> l = new List<GameObject>();
    public Text wintxt, playertxt;
    play p;
    bool win = false;
    public void restart()
    {
        SceneManager.LoadScene("play");
    }
    // Start is called before the first frame update
    void Start()
    {
        p = FindObjectOfType<play>();
        gridnum = p.gridnum;
        matchnum = p.matchnum;
        for (int i = 0; i < (gridnum * gridnum); i++)
        {
            GameObject g = Instantiate(btn, btnholder.transform);
            g.GetComponent<Button>().onClick.AddListener(() => click(g));
            l.Add(g);
        }
        if (gridnum == 3)
        {
            btnholder.GetComponent<GridLayoutGroup>().cellSize = new Vector2(91, 91);
        }
        else if (gridnum == 4)
        {
            btnholder.GetComponent<GridLayoutGroup>().cellSize = new Vector2(68, 68);
        }
        else if (gridnum == 5)
        {
            btnholder.GetComponent<GridLayoutGroup>().cellSize = new Vector2(54, 54);
        }
        else if (gridnum == 6)
        {
            btnholder.GetComponent<GridLayoutGroup>().cellSize = new Vector2(45, 45);
        }
    }
    public void click(GameObject g)
    {
        int j = 0;
        for (int i = 0; i < l.Count; i++)
        {
            if (l[i].GetComponentInChildren<Text>().text != "")
            {
                j++;
            }
        }
        if (win == false)
        {
            if (j % 2 == 0)
            {
                g.GetComponentInChildren<Text>().text = "O";
                g.GetComponent<Button>().interactable = false;
                playertxt.text = "Player B";
            }
            else
            {
                g.GetComponentInChildren<Text>().text = "X";
                g.GetComponent<Button>().interactable = false;
                playertxt.text = "Player A";
            }
            check();
        }
    }
    public void check()
    {
        if (gridnum == 3)
        {
            check3x3();
        }
        else if (gridnum == 4)
        {
            if (matchnum == 3)
            {
                check4x3();

            }
            else
            {
                check4x4();
            }
        }
        else if (gridnum == 5)
        {
            if (matchnum == 4)
            {
                check5x4();
            }
            else if (matchnum == 3)
            {
                check5x3();
            }
            else
            {
                check5x5();
            }
        }
        else if (gridnum == 6)
        {
            if (matchnum == 5)
            {
                check6x5();
            }
            else if (matchnum == 4)
            {
                check6x4();
            }
            else if (matchnum == 3)
            {
                check6x3();
            }
            else
            {
                check6x6();
            }
        }
    }
    void check3x3()
    {
        WinO3x3(0, 1, 2);
        WinO3x3(3, 4, 5);
        WinO3x3(6, 7, 8);
        WinO3x3(0, 4, 8);
        WinO3x3(2, 4, 6);
        WinO3x3(0, 3, 6);
        WinO3x3(1, 4, 7);
        WinO3x3(2, 5, 8);
    }
    void check4x4()
    {
        WinO4x4(0, 1, 2, 3);
        WinO4x4(4, 5, 6, 7);
        WinO4x4(8, 9, 10, 11);
        WinO4x4(12, 13, 14, 15);
        WinO4x4(0, 4, 8, 12);
        WinO4x4(1, 5, 9, 13);
        WinO4x4(2, 6, 10, 14);
        WinO4x4(3, 7, 11, 15);
        WinO4x4(0, 5, 10, 15);
        WinO4x4(3, 6, 9, 12);
    }
    void check4x3()
    {
        WinO3x3(0, 1, 2);
        WinO3x3(1, 2, 3);
        WinO3x3(4, 5, 6);
        WinO3x3(5, 6, 7);
        WinO3x3(8, 9, 10);
        WinO3x3(9, 10, 11);
        WinO3x3(12, 13, 14);
        WinO3x3(13, 14, 15);
        WinO3x3(0, 4, 8);
        WinO3x3(4, 8, 12);
        WinO3x3(1, 5, 9);
        WinO3x3(5, 9, 13);
        WinO3x3(2, 6, 10);
        WinO3x3(6, 10, 14);
        WinO3x3(3, 7, 11);
        WinO3x3(7, 11, 15);
        WinO3x3(1, 6, 11);
        WinO3x3(0, 5, 10);
        WinO3x3(5, 10, 15);
        WinO3x3(4, 9, 14);
        WinO3x3(2, 5, 8);
        WinO3x3(3, 6, 9);
        WinO3x3(6, 9, 12);
        WinO3x3(7, 10, 13);
    }
    void check5x5()
    {
        WinO5x5(0, 1, 2, 3, 4);
        WinO5x5(5, 6, 7, 8, 9);
        WinO5x5(10, 11, 12, 13, 14);
        WinO5x5(15, 16, 17, 18, 19);
        WinO5x5(20, 21, 22, 23, 24);
        WinO5x5(0, 5, 10, 15, 20);
        WinO5x5(1, 6, 11, 16, 21);
        WinO5x5(2, 7, 12, 17, 22);
        WinO5x5(3, 8, 13, 18, 23);
        WinO5x5(4, 9, 14, 19, 24);
        WinO5x5(0, 6, 12, 18, 24);
        WinO5x5(20, 16, 12, 8, 4);
    }
    void check5x4()
    {
        WinO4x4(0, 1, 2, 3);
        WinO4x4(1, 2, 3, 4);
        WinO4x4(5, 6, 7, 8);
        WinO4x4(6, 7, 8, 9);
        WinO4x4(10, 11, 12, 13);
        WinO4x4(11, 12, 13, 14);
        WinO4x4(15, 16, 17, 18);
        WinO4x4(16, 17, 18, 19);
        WinO4x4(20, 21, 22, 23);
        WinO4x4(21, 22, 23, 24);
        WinO4x4(0, 5, 10, 15);
        WinO4x4(1, 6, 11, 16);
        WinO4x4(2, 7, 12, 17);
        WinO4x4(3, 8, 13, 18);
        WinO4x4(4, 9, 14, 19);
        WinO4x4(5, 10, 15, 20);
        WinO4x4(6, 11, 16, 21);
        WinO4x4(7, 12, 17, 22);
        WinO4x4(8, 13, 18, 23);
        WinO4x4(9, 14, 19, 24);
        WinO4x4(1, 7, 13, 19);
        WinO4x4(0, 6, 12, 18);
        WinO4x4(6, 12, 18, 24);
        WinO4x4(5, 11, 17, 23);
    }
    void check5x3()
    {
        WinO3x3(0, 1, 2);
        WinO3x3(1, 2, 3);
        WinO3x3(2, 3, 4);
        WinO3x3(5, 6, 7);
        WinO3x3(6, 7, 8);
        WinO3x3(7, 8, 9);
        WinO3x3(10, 11, 12);
        WinO3x3(11, 12, 13);
        WinO3x3(12, 13, 14);
        WinO3x3(15, 16, 17);
        WinO3x3(16, 17, 18);
        WinO3x3(17, 18, 19);
        WinO3x3(20, 21, 22);
        WinO3x3(21, 22, 23);
        WinO3x3(22, 23, 24);
        WinO3x3(0, 5, 10);
        WinO3x3(1, 6, 11);
        WinO3x3(2, 7, 12);
        WinO3x3(3, 8, 13);
        WinO3x3(4, 9, 14);
        WinO3x3(5, 10, 15);
        WinO3x3(6, 11, 16);
        WinO3x3(7, 12, 17);
        WinO3x3(8, 13, 18);
        WinO3x3(9, 14, 19);
        WinO3x3(10, 15, 20);
        WinO3x3(11, 16, 21);
        WinO3x3(12, 17, 22);
        WinO3x3(13, 18, 23);
        WinO3x3(14, 19, 24);
    }
    void check6x6()
    {
        WinO6x6(0, 1, 2, 3, 4, 5);
        WinO6x6(6, 7, 8, 9, 10, 11);
        WinO6x6(12, 13, 14, 15, 16, 17);
        WinO6x6(18, 19, 20, 21, 22, 23);
        WinO6x6(24, 25, 26, 27, 28, 29);
        WinO6x6(30, 31, 32, 33, 34, 35);
        WinO6x6(0, 6, 12, 18, 24, 30);
        WinO6x6(1, 7, 13, 19, 25, 31);
        WinO6x6(2, 8, 14, 20, 26, 32);
        WinO6x6(3, 9, 15, 21, 27, 33);
        WinO6x6(4, 10, 16, 22, 28, 34);
        WinO6x6(5, 11, 17, 23, 29, 35);
        WinO6x6(0, 7, 14, 21, 28, 35);
        WinO6x6(5, 10, 15, 20, 25, 30);
    }
    void check6x5()
    {
        WinO5x5(0, 1, 2, 3, 4);
        WinO5x5(1, 2, 3, 4, 5);
        WinO5x5(6, 7, 8, 9, 10);
        WinO5x5(7, 8, 9, 10, 11);
        WinO5x5(12, 13, 14, 15, 16);
        WinO5x5(13, 14, 15, 16, 17);
        WinO5x5(18, 19, 20, 21, 22);
        WinO5x5(19, 20, 21, 22, 23);
        WinO5x5(24, 25, 26, 27, 28);
        WinO5x5(25, 26, 27, 28, 29);
        WinO5x5(30, 31, 32, 33, 34);
        WinO5x5(31, 32, 33, 34, 35);
        WinO5x5(0, 6, 12, 18, 24);
        WinO5x5(1, 7, 13, 19, 25);
        WinO5x5(2, 8, 14, 20, 26);
        WinO5x5(3, 9, 15, 21, 27);
        WinO5x5(4, 10, 16, 22, 28);
        WinO5x5(5, 11, 17, 23, 29);
        WinO5x5(6, 12, 18, 24, 30);
        WinO5x5(7, 13, 19, 25, 31);
        WinO5x5(8, 14, 20, 26, 32);
        WinO5x5(9, 15, 21, 27, 33);
        WinO5x5(10, 16, 22, 28, 34);
        WinO5x5(11, 17, 23, 29, 35);
        WinO5x5(1, 8, 15, 22, 29);
        WinO5x5(0, 7, 14, 21, 28);
        WinO5x5(7, 14, 21, 28, 35);
        WinO5x5(6, 13, 20, 27, 34);
    }
    void check6x4()
    {
        WinO4x4(0, 1, 2, 3);
        WinO4x4(1, 2, 3, 4);
        WinO4x4(2, 3, 4, 5);
        WinO4x4(6, 7, 8, 9);
        WinO4x4(7, 8, 9, 10);
        WinO4x4(8, 9, 10, 11);
        WinO4x4(12, 13, 14, 15);
        WinO4x4(13, 14, 15, 16);
        WinO4x4(14, 15, 16, 17);
        WinO4x4(18, 19, 20, 21);
        WinO4x4(19, 20, 21, 22);
        WinO4x4(20, 21, 22, 23);
        WinO4x4(24, 25, 26, 27);
        WinO4x4(25, 26, 27, 28);
        WinO4x4(26, 27, 28, 29);
        WinO4x4(30, 31, 32, 33);
        WinO4x4(31, 32, 33, 34);
        WinO4x4(32, 33, 34, 35);
        WinO4x4(0, 6, 12, 18);
        WinO4x4(1, 7, 13, 19);
        WinO4x4(2, 8, 14, 20);
        WinO4x4(3, 9, 15, 21);
        WinO4x4(4, 10, 16, 22);
        WinO4x4(5, 11, 17, 23);
        WinO4x4(6, 12, 18, 24);
        WinO4x4(7, 13, 19, 25);
        WinO4x4(8, 14, 20, 26);
        WinO4x4(9, 15, 21, 27);
        WinO4x4(10, 16, 22, 28);
        WinO4x4(11, 17, 23, 29);
        WinO4x4(12, 18, 24, 30);
        WinO4x4(13, 19, 25, 31);
        WinO4x4(14, 20, 26, 32);
        WinO4x4(15, 21, 27, 33);
        WinO4x4(16, 22, 28, 34);
        WinO4x4(17, 23, 29, 35);
        WinO4x4(2, 9, 16, 23);
        WinO4x4(1, 8, 15, 22);
        WinO4x4(8, 15, 22, 29);
        WinO4x4(0, 7, 14, 21);
        WinO4x4(7, 14, 21, 28);
        WinO4x4(14, 21, 28, 35);
        WinO4x4(6, 13, 20, 27);
        WinO4x4(13, 20, 27, 34);
        WinO4x4(12, 19, 26, 33);
        WinO4x4(3, 8, 13, 18);
        WinO4x4(4, 9, 14, 19);
        WinO4x4(9, 14, 19, 24);
        WinO4x4(5, 10, 15, 20);
        WinO4x4(10, 15, 20, 25);
        WinO4x4(15, 20, 25, 30);
        WinO4x4(11, 16, 21, 26);
        WinO4x4(16, 21, 26, 31);
        WinO4x4(17, 22, 27, 32);
    }
    void check6x3()
    {
        WinO3x3(0, 1, 2);
        WinO3x3(1, 2, 3);
        WinO3x3(2, 3, 4);
        WinO3x3(3, 4, 5);
        WinO3x3(6, 7, 8);
        WinO3x3(7, 8, 9);
        WinO3x3(8, 9, 10);
        WinO3x3(9, 10, 11);
        WinO3x3(12, 13, 14);
        WinO3x3(13, 14, 15);
        WinO3x3(14, 15, 16);
        WinO3x3(15, 16, 17);
        WinO3x3(18, 19, 20);
        WinO3x3(19, 20, 21);
        WinO3x3(20, 21, 22);
        WinO3x3(21, 22, 23);
        WinO3x3(24, 25, 26);
        WinO3x3(25, 26, 27);
        WinO3x3(26, 27, 28);
        WinO3x3(27, 28, 29);
        WinO3x3(30, 31, 32);
        WinO3x3(31, 32, 33);
        WinO3x3(32, 33, 34);
        WinO3x3(33, 34, 35);
        WinO3x3(0, 6, 12);
        WinO3x3(1, 7, 13);
        WinO3x3(2, 8, 14);
        WinO3x3(3, 9, 15);
        WinO3x3(4, 10, 16);
        WinO3x3(5, 11, 17);
        WinO3x3(6, 12, 18);
        WinO3x3(7, 13, 19);
        WinO3x3(8, 13, 20);
        WinO3x3(9, 14, 21);
        WinO3x3(10, 15, 22);
        WinO3x3(11, 16, 23);
        WinO3x3(12, 18, 24);
        WinO3x3(13, 19, 25);
        WinO3x3(14, 20, 26);
        WinO3x3(15, 21, 27);
        WinO3x3(16, 22, 28);
        WinO3x3(17, 23, 29);
        WinO3x3(18, 24, 30);
        WinO3x3(19, 25, 31);
        WinO3x3(20, 26, 32);
        WinO3x3(21, 27, 33);
        WinO3x3(22, 28, 34);
        WinO3x3(23, 29, 35);
        WinO3x3(3, 10, 17);
        WinO3x3(2, 9, 16);
        WinO3x3(9, 16, 23);
        WinO3x3(1, 8, 15);
        WinO3x3(8, 15, 22);
        WinO3x3(15, 22, 29);
        WinO3x3(0, 7, 14);
        WinO3x3(7, 14, 21);
        WinO3x3(14, 21, 28);
        WinO3x3(21, 28, 35);
        WinO3x3(6, 13, 20);
        WinO3x3(13, 20, 27);
        WinO3x3(20, 27, 34);
        WinO3x3(12, 19, 26);
        WinO3x3(19, 26, 33);
        WinO3x3(18, 25, 32);
        WinO3x3(2, 7, 12);
        WinO3x3(3, 8, 13);
        WinO3x3(8, 13, 18);
        WinO3x3(4, 9, 14);
        WinO3x3(9, 14, 19);
        WinO3x3(14, 19, 24);
        WinO3x3(5, 10, 15);
        WinO3x3(10, 15, 20);
        WinO3x3(15, 20, 25);
        WinO3x3(20, 25, 30);
        WinO3x3(11, 16, 21);
        WinO3x3(16, 21, 26);
        WinO3x3(21, 26, 31);
        WinO3x3(17, 22, 27);
        WinO3x3(22, 27, 32);
        WinO3x3(23, 28, 33);
    }
    void WinO3x3(int a, int b, int c)
    {
        if (l[a].GetComponentInChildren<Text>().text == "O" && l[b].GetComponentInChildren<Text>().text == "O" && l[c].GetComponentInChildren<Text>().text == "O")
        {
            wintxt.text = "Player A win";
            win = true;
        }
        else if (l[a].GetComponentInChildren<Text>().text == "X" && l[b].GetComponentInChildren<Text>().text == "X" && l[c].GetComponentInChildren<Text>().text == "X")
        {
            wintxt.text = "Player B win"; win = true;
        }
    }
    void WinO4x4(int a, int b, int c, int d)
    {
        if (l[a].GetComponentInChildren<Text>().text == "O" && l[b].GetComponentInChildren<Text>().text == "O" && l[c].GetComponentInChildren<Text>().text == "O" && l[d].GetComponentInChildren<Text>().text == "O")
        {
            wintxt.text = "Player A win"; win = true;
        }
        else if (l[a].GetComponentInChildren<Text>().text == "X" && l[b].GetComponentInChildren<Text>().text == "X" && l[c].GetComponentInChildren<Text>().text == "X" && l[d].GetComponentInChildren<Text>().text == "X")
        {
            wintxt.text = "Player B win"; win = true;
        }
    }
    void WinO5x5(int a, int b, int c, int d, int e)
    {
        if (l[a].GetComponentInChildren<Text>().text == "O" && l[b].GetComponentInChildren<Text>().text == "O" && l[c].GetComponentInChildren<Text>().text == "O" && l[d].GetComponentInChildren<Text>().text == "O" && l[e].GetComponentInChildren<Text>().text == "O")
        {
            wintxt.text = "Player A win"; win = true;
        }
        else if (l[a].GetComponentInChildren<Text>().text == "X" && l[b].GetComponentInChildren<Text>().text == "X" && l[c].GetComponentInChildren<Text>().text == "X" && l[d].GetComponentInChildren<Text>().text == "X" && l[e].GetComponentInChildren<Text>().text == "X")
        {
            wintxt.text = "Player B win"; win = true;
        }
    }
    void WinO6x6(int a, int b, int c, int d, int e, int f)
    {
        if (l[a].GetComponentInChildren<Text>().text == "O" && l[b].GetComponentInChildren<Text>().text == "O" && l[c].GetComponentInChildren<Text>().text == "O" && l[d].GetComponentInChildren<Text>().text == "O" && l[e].GetComponentInChildren<Text>().text == "O" && l[f].GetComponentInChildren<Text>().text == "O")
        {
            wintxt.text = "Player A win"; win = true;
        }
        else if (l[a].GetComponentInChildren<Text>().text == "X" && l[b].GetComponentInChildren<Text>().text == "X" && l[c].GetComponentInChildren<Text>().text == "X" && l[d].GetComponentInChildren<Text>().text == "X" && l[e].GetComponentInChildren<Text>().text == "X" && l[f].GetComponentInChildren<Text>().text == "X")
        {
            wintxt.text = "Player B win"; win = true;
        }
    }
}
